import React from 'react';
import { Edit2, Trash2, AlertCircle } from 'lucide-react';
import { Expense } from '../../types';

interface ExpenseTableProps {
  expenses: Expense[];
  onEditExpense: (expense: Expense) => void;
  onDeleteExpense: (expenseId: string) => void;
}

export const ExpenseTable: React.FC<ExpenseTableProps> = ({
  expenses,
  onEditExpense,
  onDeleteExpense
}) => {
  return (
    <div className="overflow-x-auto">
      <table className="w-full text-sm text-right">
        <thead className="bg-gray-50">
          <tr>
            <th className="px-4 py-3 text-right font-medium text-gray-700">תאריך</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">תיאור</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">קטגוריה</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">כניסה</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">סכום</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">הערות</th>
            <th className="px-4 py-3 text-right font-medium text-gray-700">פעולות</th>
          </tr>
        </thead>
        <tbody className="divide-y divide-gray-200">
          {expenses.map((expense) => (
            <tr key={expense.id} className="hover:bg-gray-50">
              <td className="px-4 py-3 text-gray-600">
                {new Date(expense.date).toLocaleDateString('he-IL')}
              </td>
              <td className="px-4 py-3">
                <div className="flex items-center gap-2">
                  <span className="font-medium text-gray-900">{expense.description}</span>
                  {expense.isAutoGenerated && (
                    <AlertCircle className="h-4 w-4 text-blue-500" title="נוצר אוטומטית" />
                  )}
                </div>
              </td>
              <td className="px-4 py-3">
                <span className="inline-flex px-2 py-1 text-xs rounded-full bg-orange-100 text-orange-800">
                  {expense.category}
                </span>
              </td>
              <td className="px-4 py-3 text-gray-600">
                {expense.entrance ? `כניסה ${expense.entrance}` : 'כל הבניין'}
              </td>
              <td className="px-4 py-3 font-medium text-gray-900">
                {expense.amount.toLocaleString()}₪
              </td>
              <td className="px-4 py-3 text-gray-600">
                {expense.notes || '-'}
              </td>
              <td className="px-4 py-3">
                <div className="flex items-center gap-2">
                  {!expense.isAutoGenerated && (
                    <>
                      <button
                        onClick={() => onEditExpense(expense)}
                        className="p-1 text-blue-600 hover:bg-blue-100 rounded"
                        title="ערוך"
                      >
                        <Edit2 className="h-4 w-4" />
                      </button>
                      <button
                        onClick={() => onDeleteExpense(expense.id)}
                        className="p-1 text-red-600 hover:bg-red-100 rounded"
                        title="מחק"
                      >
                        <Trash2 className="h-4 w-4" />
                      </button>
                    </>
                  )}
                  {expense.isAutoGenerated && (
                    <span className="text-xs text-gray-500">אוטומטי</span>
                  )}
                </div>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
      
      {expenses.length === 0 && (
        <div className="text-center py-8 text-gray-500">
          אין הוצאות רשומות
        </div>
      )}
    </div>
  );
};